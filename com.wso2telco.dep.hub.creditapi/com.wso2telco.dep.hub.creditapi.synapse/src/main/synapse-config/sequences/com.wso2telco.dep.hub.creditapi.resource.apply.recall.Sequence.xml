<?xml version="1.0" encoding="UTF-8"?>
<sequence name="com.wso2telco.dep.hub.creditapi.resource.apply.recall.Sequence" onError="com.wso2telco.dep.common.response.unexpectedError.Sequence" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
	<sequence key="com.wso2telco.dep.common.main.request.Sequence"/>
	
    <property expression="$ctx:uri.var.msisdn" name="msisdn" scope="default" type="STRING"/>
    <property expression="fn:normalize-space($ctx:msisdn)" name="msisdn" scope="default" type="STRING" pattern="((^(?!null).*$)|(^(null).+$))" group="1"/>
 
    <call-template target="com.wso2telco.dep.common.msisdnValidator.Template">
        <with-param name="paramName" value="msisdn"/>
        <with-param name="paramValue" value="{$ctx:msisdn}"/>
    </call-template>
	
	<!-- Parameter for endpoint retrieval -->
	<property expression="$ctx:msisdn" name="MSISDN" scope="default" type="STRING"/>  
  	<!-- retrieve operator's endpoint -->
  	<sequence key="com.wso2telco.dep.common.endpoint.retriever.Sequence"/>
  	
  	<!-- retrieve operator's access token -->
  	<sequence key="com.wso2telco.dep.common.select.token.Sequence"/>
  	<!-- send request to operator endpoint -->
  	<sequence key="com.wso2telco.dep.common.call.endpoint.Sequence"/>


  
  	<!-- retrieve hub url from registry -->
  	<property expression="get-property('registry', 'conf:/repository/wso2telco/configurations/mediationConfig.xml')" name="mediationConfig" scope="default" type="OM"/>
  	<property expression="$ctx:mediationConfig//huburl" name="hubUrl" scope="default" type="STRING"/>  

    <property expression="json-eval($.creditApplyResponse.receiptResponse.notifyURL)" name="notifyURL" scope="default" type="STRING"/>
    <property expression="fn:normalize-space($ctx:notifyURL)" name="notifyURL" scope="default" type="STRING" pattern="((^(?!null).*$)|(^(null).+$))" group="1"/>
  
  	<filter xpath="boolean($ctx:notifyURL)">
  		<then>  			
    		<property expression="$ctx:notifyURL" name="NOTIFY_URL_ID" scope="default" type="STRING" pattern="(^.*\/(.+)$)" group="2"/>
  			<sequence key="com.wso2telco.dep.common.notification.url.retriever.Sequence"/>  			
  		</then>
  		<else/>
  	</filter> 

	<class name="org.wso2telco.dep.nashornmediator.NashornMediator">
		<property name="script" value="
			var payload = mc.getPayloadJSON();
			var clientCorrelator = payload.creditApplyResponse.clientCorrelator;
			var notifyURLId = mc.getProperty('NOTIFY_URL_ID');
			var resourceURL = payload.creditApplyResponse.receiptResponse.resourceURL;			
			         								
			if (clientCorrelator != null &amp;&amp; clientCorrelator !='') {
				var clientCorrelatorArray = clientCorrelator.split(':urn:uuid:');
				if (clientCorrelatorArray.length == 2) {
			    	payload.creditApplyResponse.clientCorrelator = clientCorrelatorArray[0];
				} else {
			    	delete payload.creditApplyResponse.clientCorrelator;
				}
			} else {
				delete payload.creditApplyResponse.clientCorrelator;
			}

			if (notifyURLId != null &amp;&amp; notifyURLId != '') {
				payload.creditApplyResponse.receiptResponse.notifyURL = mc.getProperty('NOTIFY_INFO_URL');
			} else {
				delete payload.creditApplyResponse.receiptResponse.notifyURL;
			}
			
			if (resourceURL != null &amp;&amp; resourceURL != '') {
				var operatorEndpoint = mc.getProperty('OPERATOR_ENDPOINT');
				var hubURL = mc.getProperty('hubUrl');
				var apiName = mc.getProperty('API_NAME');
				var apiVersion = mc.getProperty('VERSION');
				
				var hubResourceURL = resourceURL.replace(operatorEndpoint, hubURL.concat('/')
					.concat(apiName).concat('/').concat(apiVersion));
			
				payload.creditApplyResponse.receiptResponse.resourceURL = hubResourceURL;				
			} else {
				delete payload.creditApplyResponse.receiptResponse.resourceURL;
			}

			mc.setPayloadJSON(payload);
		"/>
	</class>

  	<sequence key="com.wso2telco.dep.common.main.response.Sequence"/>
</sequence>
